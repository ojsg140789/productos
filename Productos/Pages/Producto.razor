@page "/producto"

<div class="row">
    <div class="col-md-12">
        <div class="row justify-content-md-center">
            <div class="col-md-8 col-sm-12">
                <div class="card text-center">
                    <div class="card-header">
                        Productos
                    </div>
                    <div class="card-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Id</th>
                                    <th scope="col">Nombre</th>
                                    <th scope="col">Tipo</th>
                                    <th scope="col">Tasa de interés</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var producto in productos)
                                {
                                    <tr>
                                        <th scope="row">@producto.Id</th>
                                        <td>@producto.Nombre</td>
                                        <td>@producto.Tipo</td>
                                        <td>@producto.TasaInteres</td>
                                        <td>
                                            <button class="btn btn-primary" 
                                                @onclick="@(() => editar(@producto))">
                                                Editar
                                            </button>
                                            <button class="btn btn-primary"
                                                    @onclick="@(() => eliminar(@producto))">
                                                Eliminar
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card text-center mt-2">
                    <div class="card-body">
                        <EditForm Model="@producto" OnValidSubmit="@GuardarProducto">
                            <div class="col-auto">
                                <label for="nombre" class="form-label">Nombre</label>
                                <InputText type="text" class="form-control" id="nombre" @bind-Value="producto.Nombre" />
                            </div>
                            <div class="col-auto">
                                <label for="tipo" class="form-label">Tipo</label>
                                <InputText type="text" class="form-control" id="tipo" @bind-Value="producto.Tipo" />
                            </div>
                            <div class="col-auto">
                                <label for="tasaInteres" class="form-label">Tasa Interes</label>
                                <InputNumber class="form-control" id="tasaInteres" @bind-Value="producto.TasaInteres" />
                            </div>
                            <div class="col-auto">
                                <label for="status" class="form-label">Estado</label>
                                <InputCheckbox id="status" @bind-Value="producto.Status" />
                            </div>
                            <div class="col-auto">
                                <button type="submit" class="btn btn-primary mb-3">Guardar</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Productos.Models.Producto> productos;

    private Productos.Models.Producto producto = new();

    protected override void OnInitialized()
    {
        productos = new List<Productos.Models.Producto>
        {
            new Productos.Models.Producto { Id = 1, Nombre = "Crédito Auto", Tipo = "Personal", TasaInteres = 4, Status = true },
            new Productos.Models.Producto { Id = 2, Nombre = "Crédito Personal", Tipo = "Personal", TasaInteres = 5, Status = true },
            new Productos.Models.Producto { Id = 3, Nombre = "Crédito Vivienda", Tipo = "Negocio", TasaInteres = 6, Status = false },
        };
    }

    private void editar(Productos.Models.Producto productoEditar)
    {
        producto = productoEditar;
    }

    private void eliminar(Productos.Models.Producto producto)
    {
        var productoEliminar = productos.FirstOrDefault(p => p.Id == producto.Id);
        if(productoEliminar != null)
        {
            productos.Remove(productoEliminar);
        }
    }

    private void GuardarProducto()
    {
        if(producto.Id != 0)
        {
            var productoEditar = productos.FirstOrDefault(p => p.Id == producto.Id);

            if(productoEditar != null)
            {
                productoEditar.Nombre = producto.Nombre;
                productoEditar.Tipo = producto.Tipo;
                productoEditar.TasaInteres = producto.TasaInteres;
                productoEditar.Status = producto.Status;
            }
        } 
        else
        {
            var ultimoProductoSeguro = productos.LastOrDefault();
            if (ultimoProductoSeguro != null)
            {
                producto.Id = ultimoProductoSeguro.Id + 1;
            }
            else
            {
                producto.Id = 1;
            }

            productos.Add(new Productos.Models.Producto
            {
                Id = producto.Id,
                Nombre = producto.Nombre,
                Tipo = producto.Tipo,
                TasaInteres = producto.TasaInteres,
                Status = producto.Status,
            });
        }

        producto = new();
    }

}
